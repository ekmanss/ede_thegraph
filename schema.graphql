type ExampleEntity @entity {
  id: Bytes!
  count: BigInt!
  account: Bytes! # address
  orderIndex: BigInt! # uint256
}


type Account @entity {
  id: Bytes!
  address: String!
  lastOrderIndex: BigInt!
  orders: [Order!]!
  deOrders: [DeOrder!]!
}

type Order @entity {
  id: Bytes!
  orderOwner: Account!
  ownerAddress: String! # address
  orderIndex: BigInt! # uint256
  purchaseToken: String! # address
  purchaseTokenAmount: BigInt! # uint256
  collateralToken: String! # address
  indexTokenAddress: String!
  sizeDelta: BigInt! # uint256
  isLong: Boolean!
  triggerPrice: String!
  triggerAboveThreshold: Boolean!
  executionFee: String!
  timeStamp: BigInt!
  excuted: Boolean!
}

type DeOrder @entity {
  id: Bytes!
  orderOwner: Account!
  ownerAddress: String! # address
  orderIndex: BigInt! # uint256
  collateralToken: String! # address
  collateralDelta: BigInt! # uint256
  indexTokenAddress: String!
  sizeDelta: BigInt! # uint256
  isLong: Boolean!
  triggerPrice: String!
  triggerAboveThreshold: Boolean!
  executionFee: String!
  timeStamp: BigInt!
  excuted: Boolean!
}

type SwapOrder @entity {
  id: Bytes!
  ownerAddress: String! # address
  orderIndex: BigInt! # uint256
  path: [String!]!
  pathRouter: String!
  amountIn: BigInt! # uint256
  minOut: BigInt! # uint256
  triggerRatio: BigInt! # uint256
  triggerAboveThreshold: Boolean!
  shouldUnwrap: Boolean!
  executionFee: BigInt! # uint256
  timeStamp: BigInt!
  excuted: Boolean!
}

type MarketOrderCreateIncreasePosition @entity {
  id: ID!
  counterIndex: BigInt!
}

type MarketOrderCreateDecreasePosition @entity {
  id: ID!
  counterIndex: BigInt!
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # gas used during txn execution
  gasUsed: BigInt!
  gasPrice: BigInt!
}

type CreateIncreasePositionInfo @entity {
  id: ID!
  account: Account!
  path: [String!] # address[]
  indexTokne: String! # uint256
  amountIn: String! # address
  minOut: String! # uint256
  sizeDelta: String!
  isLong: Boolean!
  acceptablePrice: String!
  executionFee: String!
  index: BigInt!
  blockNumber: BigInt!
  blockTime: BigInt!
  gasPrice: String!
}


type CreateDecreasePositionInfo @entity {
  id: ID!
  account: Account!
  path: [String!] # address[]
  indexTokne: String! # uint256
  collateralDelta: String! # address
  sizeDelta: String! # uint256
  isLong: Boolean!
  receiver: String!
  acceptablePrice: String!
  minOut: String!
  executionFee: String!
  index: BigInt!
  blockNumber: BigInt!
  blockTime: BigInt!
}